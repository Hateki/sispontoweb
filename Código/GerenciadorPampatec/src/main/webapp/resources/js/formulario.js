// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.


/*
 * Funções de exibição de Informações
 * relativa as funcionalidades dos botões
 */



/*
 * Funções de Retorno de etapas no 
 * formulário de Envio de Plano de Negócio
 */

function retornaPrimeiraParte() {
    $("#formularioParte02").fadeOut(1);
    $("#formularioParte01").fadeIn(1);
}
function retornaSegundaParte() {
    $("#formularioParte03").fadeOut(1);
    $("#formularioParte02").fadeIn(1);
}
function retornaTerceiraParte() {
    $("#formularioParte04").fadeOut(1);
    $("#formularioParte03").fadeIn(1);
}
function retornaQuartaParte() {
    $("#formularioParte05").fadeOut(1);
    $("#formularioParte04").fadeIn(1);
}
function retornaQuintaParte() {
    $("#formularioParte06").fadeOut(1);
    $("#formularioParte05").fadeIn(1);
}

/*
 * Fim das funções de retorno de etapas do formulário --------------------------
 */

/*
 * Início das funções de exibição das próximas
 * etapas do formulário de Envio do Plano de Negócio
 */

function exibeSegundaParte() {
    $("#formularioParte01").fadeOut(1);
    $("#formularioParte02").fadeIn(1);
}
function exibeTerceiraParte() {
    $("#formularioParte02").fadeOut(1);
    $("#formularioParte03").fadeIn(1);
}
function exibeQuartaParte() {
    $("#formularioParte03").fadeOut(1);
    $("#formularioParte04").fadeIn(1);
}
function exibeQuintaParte() {
    $("#formularioParte04").fadeOut(1);
    $("#formularioParte05").fadeIn(1);
}
function exibeSextaParte() {
    $("#formularioParte05").fadeOut(1);
    $("#formularioParte06").fadeIn(1);
}

/*
 * Fim das funções de exibição
 * das próximas etapas do fomulário
 * de envio do plano de negócio
 * -----------------------------------------------------------------
 */

function  verificarCampos() {
    verificaContatos();
    verificaNegocio();
    verificaAnaliseMercado();
    verificarProdutoServico();
    verificaGestaoPessoas();
    verificaPlanoFinanceiro();
}

function verificaContatos() {
    var empresaProjeto = document.getElementById("formulario_cadastro_projeto:empresaProjeto");
    var tabContato = document.getElementById("tabContato");
    mudarCor(empresaProjeto, tabContato);
}

function verificaNegocio() {
    var segmentoDeClientes = document.getElementById("formulario_cadastro_projeto:segmentoDeClientes");
    var propostaDeValor = document.getElementById("formulario_cadastro_projeto:propostaDeValor");
    var atividadesChave = document.getElementById("formulario_cadastro_projeto:atividadesChave");
    var tabNegocio = document.getElementById("tabNegocio");
    var listaCampos = new Array();
    listaCampos[0] = segmentoDeClientes;
    listaCampos[1] = propostaDeValor;
    listaCampos[2] = atividadesChave;
    mudarCorLista(listaCampos, tabNegocio);
}

function verificaAnaliseMercado(){
    var relacoComClientes = document.getElementById("formulario_cadastro_projeto:relacoComClientes");
    var parceriasChaves = document.getElementById("formulario_cadastro_projeto:parceriasChaves");
    var canais = document.getElementById("formulario_cadastro_projeto:canais");
    var recursosPrincipais = document.getElementById("formulario_cadastro_projeto:recursosPrincipais");
    var concorrentes = document.getElementById("formulario_cadastro_projeto:concorrentes");
    var tabAnaliseMercado = document.getElementById("tabAnaliseMercado");
    var listaCampos = new Array();
    listaCampos[0] = relacoComClientes;
    listaCampos[1] = parceriasChaves;
    listaCampos[2] = canais;
    listaCampos[3] = recursosPrincipais;
    listaCampos[4] = concorrentes;
    mudarCorLista(listaCampos, tabAnaliseMercado);
}

function verificarProdutoServico(){
    var tecnologiaProcessos = document.getElementById("formulario_cadastro_projeto:tecnologiaProcessos");
    var potencialInovacaoTecnologica = document.getElementById("formulario_cadastro_projeto:potencialInovacaoTecnologica");
    var aplicacoes = document.getElementById("formulario_cadastro_projeto:aplicacoes");
    var dificuldadesEsperadas = document.getElementById("formulario_cadastro_projeto:dificuldadesEsperadas");
    var interacaoEmpresaUniversidade = document.getElementById("formulario_cadastro_projeto:interacaoEmpresaUniversidade");
    var interacaoEmpresaComunidadeGoverno = document.getElementById("formulario_cadastro_projeto:interacaoEmpresaComunidadeGoverno");
    var infraestrutura = document.getElementById("formulario_cadastro_projeto:infraestrutura");
    var tabProdutoServico = document.getElementById("tabProdutoServico");
    var listaCampos = new Array();
    
    listaCampos[0] = tecnologiaProcessos;
    listaCampos[1] = potencialInovacaoTecnologica;
    listaCampos[2] = aplicacoes;
    listaCampos[3] = dificuldadesEsperadas;
    listaCampos[4] = interacaoEmpresaUniversidade;
    listaCampos[5] = interacaoEmpresaComunidadeGoverno;
    listaCampos[6] = infraestrutura;
    mudarCorLista(listaCampos, tabProdutoServico);
}

function verificaGestaoPessoas(){
    var participacaoAcionaria = document.getElementById("formulario_cadastro_projeto:participacaoAcionaria");
    var potencialEmprego = document.getElementById("formulario_cadastro_projeto:potencialEmprego");
    var tabGestaoPessoas = document.getElementById("tabGestaoPessoas");
    var listaCampos = new Array();
    listaCampos[0] = participacaoAcionaria;
    listaCampos[1] = potencialEmprego;
    mudarCorLista(listaCampos, tabGestaoPessoas);
}

function verificaPlanoFinanceiro(){
    var fontesDeReceita = document.getElementById("formulario_cadastro_projeto:fontesDeReceita");
    var estruturaCustos = document.getElementById("formulario_cadastro_projeto:estruturaCustos");
    var investimentoInicial = document.getElementById("formulario_cadastro_projeto:investimentoInicial");
    var custosfixos = document.getElementById("formulario_cadastro_projeto:custosfixos");
    var custosvariaveis = document.getElementById("formulario_cadastro_projeto:custosvariaveis");
    var tabPlanoFinanceiro = document.getElementById("tabPlanoFinanceiro");
    var listaCampos = new Array();
    
    listaCampos[0] = fontesDeReceita;
    listaCampos[1] = estruturaCustos;
    listaCampos[2] = investimentoInicial;
    listaCampos[3] = custosfixos;
    listaCampos[4] = custosvariaveis;
    
    mudarCorLista(listaCampos, tabPlanoFinanceiro);
}

function mudarCorLista(listaCampos, tab) {
    for (var i = 0; i < listaCampos.length; i++) {
        if (!verificaPreenchimento(listaCampos[i])) {
            tab.style.color = "red";
        } else {
            tab.style.color = "green";
        }
    }
}

function mudarCor(campo, tab) {
    if (!verificaPreenchimento(campo)) {
        tab.style.color = "red";
    } else {
        tab.style.color = "green";
    }
}

function verificaPreenchimento(campo) {
    if (campo.value === "") {
        return false;
    } else {
        return true;
    }
}